CREATE PROCEDURE Mapping_Book_Store_Flow_Data_Insert(IN source REFERENCE,IN InputLocalEnvironment REFERENCE) BEGIN
DECLARE stackPtr REFERENCE TO InputLocalEnvironment.SQL.MAP;
CREATE FIELD stackPtr.LOCAL_STACK;
DECLARE localStackPtr REFERENCE TO stackPtr.LOCAL_STACK;
CREATE FIELD localStackPtr.SOURCE_STACK;
DECLARE sourceStackPtr REFERENCE TO localStackPtr.SOURCE_STACK;
CREATE FIELD sourceStackPtr.nestingLevel;
DECLARE nestingLevel REFERENCE TO sourceStackPtr.nestingLevel;
CREATE FIELD sourceStackPtr.occurrence;
CREATE FIELD sourceStackPtr.sourceLiteral;
DECLARE "#WBIMB_PARSER_CATEGORY_XMLNSC" CONSTANT INTEGER 2;
DECLARE "#WBIMB_PARSER_CATEGORY_XML" CONSTANT INTEGER 1;
DECLARE "#WBIMB_PARSER_CATEGORY_MRM" CONSTANT INTEGER 0;
CREATE FIELD localStackPtr.field;
DECLARE localStackPtrRef REFERENCE TO localStackPtr.field;
DECLARE globalStackRef REFERENCE TO stackPtr.GLOBAL_STACK;
IF (NOT LASTMOVE(globalStackRef)) THEN
	CREATE FIELD stackPtr.GLOBAL_STACK;
	DECLARE globalStackPtr REFERENCE TO stackPtr.GLOBAL_STACK;
	CREATE FIELD globalStackPtr.frame;
	CREATE FIELD globalStackPtr.frameDepth;
	SET globalStackPtr.frameDepth = 0;
END IF;
DECLARE "xsd" NAMESPACE 'http://www.w3.org/2001/XMLSchema';
DECLARE "xsi" NAMESPACE 'http://www.w3.org/2001/XMLSchema-instance';
CREATE FIELD stackPtr.sourceParserCategory;
DECLARE source_msg_root REFERENCE TO source;
MOVE localStackPtrRef TO source;
MOVE localStackPtrRef LASTCHILD;
SET localStackPtr.field = FIELDNAME(localStackPtrRef);
IF localStackPtr.field IN ('XMLNSC', 'SOAP', 'DataObject') THEN
	MOVE source_msg_root FIRSTCHILD NAME FIELDNAME(localStackPtrRef);
	SET stackPtr.sourceParserCategory = "#WBIMB_PARSER_CATEGORY_XMLNSC";
ELSEIF localStackPtr.field IN ('XMLNS', 'XML', 'JMSMap', 'JMSStream') THEN
	MOVE source_msg_root FIRSTCHILD NAME FIELDNAME(localStackPtrRef);
	SET stackPtr.sourceParserCategory = "#WBIMB_PARSER_CATEGORY_XML";
ELSEIF localStackPtr.field IN ('MRM', 'BLOB') THEN
	MOVE source_msg_root FIRSTCHILD NAME FIELDNAME(localStackPtrRef);
	SET stackPtr.sourceParserCategory = "#WBIMB_PARSER_CATEGORY_MRM";
ELSEIF localStackPtr.field IN ('LocalEnvironment', 'Properties', 'MQMD', 'MQPCF', 'MQCIH', 'MQDLH', 'MQIIH', 'MQMDE', 'MQRFH', 'MQRFH2', 'MQRFH2C', 'MQRFH2', 'MQRMH', 'MQSAPH', 'MQWIH', 'SMQ_BMH', 'EmailOutputHeader', 'HTTPInputHeader', 'HTTPReplyHeader', 'HTTPRequestHeader', 'HTTPResponseHeader', 'JMSTransport') THEN
ELSE
	MOVE source LASTCHILD;
	THROW EXCEPTION SEVERITY 20 MESSAGE 4680 VALUES(FIELDNAME(source), MessageFlowLabel || '.' || NodeLabel);
END IF;
DECLARE source_body REFERENCE TO source_msg_root;
IF localStackPtr.field IN ('XMLNSC', 'XMLNS', 'JMSMap', 'JMSStream', 'DataObject', 'BLOB', 'XML') THEN
	MOVE source_body FIRSTCHILD  NAMESPACE '' NAME 'Create_Customer_Account_MSG';
END IF;
IF FIELDNAME(source.MQRFH2C) IS NOT NULL THEN
	CREATE LASTCHILD OF localStackPtr DOMAIN 'MQRFH2C' NAME 'MQRFH2';
	SET localStackPtr.MQRFH2 = source.MQRFH2C;
ELSEIF FIELDNAME(source.MQRFH2) IS NOT NULL THEN
	CREATE LASTCHILD OF localStackPtr DOMAIN 'MQRFH2' NAME 'MQRFH2';
	SET localStackPtr.MQRFH2 = source.MQRFH2;
ELSE
	CREATE FIELD localStackPtr.MQRFH2;
END IF;
DECLARE source_MQRFH2_or_MQRFH2C REFERENCE TO localStackPtr.MQRFH2;
IF stackPtr.sourceParserCategory = "#WBIMB_PARSER_CATEGORY_XMLNSC" THEN
	INSERT INTO Database.BSTOREDB.UPENDER.CUSTACCTB(FIRST_NAME,LAST_NAME,USERID,PASSWORD,EMAIL,DAY_PHONE,EVE_PHONE,SHIP_ADDRESS1,SHIP_ADDRESS2,SHIP_TOWN,SHIP_POSTCODE,BILL_ADDRESS1,BILL_ADDRESS2,BILL_TOWN,BILL_POSTCODE,CARDTYPE,CARDNUM,EXP_DATE,ISS_DATE,ISS_NUM,SECCODE) VALUES (source_body."Personal_Details".(XMLNSC.Element)"First_Name",source_body."Personal_Details".(XMLNSC.Element)"Last_Name",source_body."Personal_Details".(XMLNSC.Element)"User_ID",source_body."Personal_Details".(XMLNSC.Element)"Password",source_body.(XMLNSC.Element)"Email_Address",source_body.(XMLNSC.Element)"Daytime_Telephone",source_body.(XMLNSC.Element)"Evening_Telephone",source_body."Shipping_Address".(XMLNSC.Element)"Address_1",source_body."Shipping_Address".(XMLNSC.Element)"Address_2",source_body."Shipping_Address".(XMLNSC.Element)"Town",source_body."Shipping_Address".(XMLNSC.Element)"Postcode",source_body."Billing_Address".(XMLNSC.Element)"Address_1",source_body."Billing_Address".(XMLNSC.Element)"Address_2",source_body."Billing_Address".(XMLNSC.Element)"Town",source_body."Billing_Address".(XMLNSC.Element)"Postcode",source_body."Payment_Details".(XMLNSC.Element)"Card",source_body."Payment_Details".(XMLNSC.Element)"Card_Number",source_body."Payment_Details".(XMLNSC.Element)"Expiry_Date",source_body."Payment_Details".(XMLNSC.Element)"Issue_Date",source_body."Payment_Details".(XMLNSC.Element)"Issue_Number",source_body."Payment_Details".(XMLNSC.Element)"Security_Code");
ELSE
	INSERT INTO Database.BSTOREDB.UPENDER.CUSTACCTB(FIRST_NAME,LAST_NAME,USERID,PASSWORD,EMAIL,DAY_PHONE,EVE_PHONE,SHIP_ADDRESS1,SHIP_ADDRESS2,SHIP_TOWN,SHIP_POSTCODE,BILL_ADDRESS1,BILL_ADDRESS2,BILL_TOWN,BILL_POSTCODE,CARDTYPE,CARDNUM,EXP_DATE,ISS_DATE,ISS_NUM,SECCODE) VALUES (source_body."Personal_Details"."First_Name",source_body."Personal_Details"."Last_Name",source_body."Personal_Details"."User_ID",source_body."Personal_Details"."Password",source_body."Email_Address",source_body."Daytime_Telephone",source_body."Evening_Telephone",source_body."Shipping_Address"."Address_1",source_body."Shipping_Address"."Address_2",source_body."Shipping_Address"."Town",source_body."Shipping_Address"."Postcode",source_body."Billing_Address"."Address_1",source_body."Billing_Address"."Address_2",source_body."Billing_Address"."Town",source_body."Billing_Address"."Postcode",source_body."Payment_Details"."Card",source_body."Payment_Details"."Card_Number",source_body."Payment_Details"."Expiry_Date",source_body."Payment_Details"."Issue_Date",source_body."Payment_Details"."Issue_Number",source_body."Payment_Details"."Security_Code");
END IF;
MOVE globalStackRef TO stackPtr.GLOBAL_STACK;
IF (LASTMOVE(globalStackRef) AND globalStackRef.frameDepth = 0)THEN
	DELETE FIELD stackPtr.GLOBAL_STACK;
	DELETE FIELD stackPtr.LOCAL_STACK;
	DELETE FIELD stackPtr.sourceParserCategory;
	DELETE FIELD stackPtr.targetParserCategory;
	DELETE FIELD stackPtr.targetParser;
END IF;
END;
