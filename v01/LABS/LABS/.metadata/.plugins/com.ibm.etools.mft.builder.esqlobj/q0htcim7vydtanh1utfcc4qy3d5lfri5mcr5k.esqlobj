CREATE COMPUTE MODULE UpdatePassangerTB
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
	
	SET OutputRoot = InputRoot;
	
	DECLARE i INTEGER 1;
	DECLARE j INTEGER Environment.Variables.NoPassengers;
	DECLARE resno CHARACTER;
	
	WHILE i<=j DO
		
		
		
		SET resno = (InputRoot.XMLNSC.Reservation.FlightDetails.Number ||
		 InputRoot.XMLNSC.Reservation.FlightDetails.Date || 
		 CAST(Environment.Variables.RESERVATIONSEQNO AS CHARACTER));
		 
		 INSERT INTO Database.UPENDER.XMLPASSENGERTB (LASTNAME,FIRSTNAME,FLIGHTNO,FLIGHTDATE,CLASSTYPE,RESERVATIONNO )
		  VALUES ( InputRoot.XMLNSC.Reservation.ListOfPassengers.PassengerDetails[i].LastName,
		  InputRoot.XMLNSC.Reservation.ListOfPassengers.PassengerDetails[i].FirstName,
		  InputRoot.XMLNSC.Reservation.FlightDetails.Number,
		  InputRoot.XMLNSC.Reservation.FlightDetails.Date,
		  InputRoot.XMLNSC.Reservation.ListOfPassengers.PassengerDetails[i].Class,
		  resno);
		  
		  SET OutputRoot.XMLNSC.PassengerReservationResponse.ListOfConfirmations.Confirmation[i].ReservationNumber =resno;
		  
		  SET i = i + 1;
		  
		
		
	END WHILE;
	
	
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;