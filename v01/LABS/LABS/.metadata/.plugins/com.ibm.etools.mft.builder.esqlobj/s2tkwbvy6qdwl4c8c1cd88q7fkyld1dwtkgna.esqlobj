CREATE COMPUTE MODULE TransferLoanAmountFromSavings
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		CALL CopyEntireMessage();
		
		DECLARE result BOOLEAN;
		
		CALL PayFromSavings()INTO result ;
		
		IF (result = TRUE) THEN
			
			RETURN TRUE;
			
		ELSE
			
			RETURN FALSE;
			
		END IF;
			
			
		
		RETURN TRUE;
	END;


	 CREATE PROCEDURE PayFromSavings( ) RETURNS BOOLEAN
 
            BEGIN
			
			DECLARE Saving_acc_no INTEGER;
			DECLARE Loan_acc_no INTEGER;
			DECLARE acc_name CHARACTER;
			DECLARE stat CHARACTER;
			DECLARE transaction CHARACTER;
			DECLARE acc_status CHARACTER;
			DECLARE amount FLOAT;
			DECLARE balance FLOAT;
			
			SET Saving_acc_no = CAST(InputRoot.XMLNSC.Account.SavingAccountNumber AS INTEGER);
			SET Loan_acc_no = CAST(InputRoot.XMLNSC.Account.LoanAccountNumber AS INTEGER);
			SET acc_name = InputRoot.XMLNSC.Account.AccountName;
			SET amount = CAST(InputRoot.XMLNSC.Account.Amount AS FLOAT);
			SET transaction ='DEBIT';
			
			
			 END;
 


	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
	



 END MODULE;