CREATE PROCEDURE LAB7_Mapping(IN source REFERENCE,IN target REFERENCE,IN InputLocalEnvironment REFERENCE,IN OutputLocalEnvironment REFERENCE) BEGIN
DECLARE stackPtr REFERENCE TO InputLocalEnvironment.SQL.MAP;
CREATE FIELD stackPtr.LOCAL_STACK;
DECLARE localStackPtr REFERENCE TO stackPtr.LOCAL_STACK;
CREATE FIELD localStackPtr.SOURCE_STACK;
DECLARE sourceStackPtr REFERENCE TO localStackPtr.SOURCE_STACK;
CREATE FIELD sourceStackPtr.nestingLevel;
DECLARE nestingLevel REFERENCE TO sourceStackPtr.nestingLevel;
CREATE FIELD sourceStackPtr.occurrence;
CREATE FIELD sourceStackPtr.sourceLiteral;
DECLARE "#WBIMB_PARSER_CATEGORY_XMLNSC" CONSTANT INTEGER 2;
DECLARE "#WBIMB_PARSER_CATEGORY_XML" CONSTANT INTEGER 1;
DECLARE "#WBIMB_PARSER_CATEGORY_MRM" CONSTANT INTEGER 0;
CREATE FIELD localStackPtr.field;
DECLARE localStackPtrRef REFERENCE TO localStackPtr.field;
DECLARE globalStackRef REFERENCE TO stackPtr.GLOBAL_STACK;
IF (NOT LASTMOVE(globalStackRef)) THEN
	CREATE FIELD stackPtr.GLOBAL_STACK;
	DECLARE globalStackPtr REFERENCE TO stackPtr.GLOBAL_STACK;
	CREATE FIELD globalStackPtr.frame;
	CREATE FIELD globalStackPtr.frameDepth;
	SET globalStackPtr.frameDepth = 0;
END IF;
DECLARE "xsd" NAMESPACE 'http://www.w3.org/2001/XMLSchema';
DECLARE "xsi" NAMESPACE 'http://www.w3.org/2001/XMLSchema-instance';
CREATE FIELD stackPtr.sourceParserCategory;
DECLARE source_msg_root REFERENCE TO source;
MOVE localStackPtrRef TO source;
MOVE localStackPtrRef LASTCHILD;
SET localStackPtr.field = FIELDNAME(localStackPtrRef);
IF localStackPtr.field IN ('XMLNSC', 'SOAP', 'DataObject') THEN
	MOVE source_msg_root FIRSTCHILD NAME FIELDNAME(localStackPtrRef);
	SET stackPtr.sourceParserCategory = "#WBIMB_PARSER_CATEGORY_XMLNSC";
ELSEIF localStackPtr.field IN ('XMLNS', 'XML', 'JMSMap', 'JMSStream') THEN
	MOVE source_msg_root FIRSTCHILD NAME FIELDNAME(localStackPtrRef);
	SET stackPtr.sourceParserCategory = "#WBIMB_PARSER_CATEGORY_XML";
ELSEIF localStackPtr.field IN ('MRM', 'BLOB') THEN
	MOVE source_msg_root FIRSTCHILD NAME FIELDNAME(localStackPtrRef);
	SET stackPtr.sourceParserCategory = "#WBIMB_PARSER_CATEGORY_MRM";
ELSEIF localStackPtr.field IN ('LocalEnvironment', 'Properties', 'MQMD', 'MQPCF', 'MQCIH', 'MQDLH', 'MQIIH', 'MQMDE', 'MQRFH', 'MQRFH2', 'MQRFH2C', 'MQRFH2', 'MQRMH', 'MQSAPH', 'MQWIH', 'SMQ_BMH', 'EmailOutputHeader', 'HTTPInputHeader', 'HTTPReplyHeader', 'HTTPRequestHeader', 'HTTPResponseHeader', 'JMSTransport') THEN
ELSE
	MOVE source LASTCHILD;
	THROW EXCEPTION SEVERITY 20 MESSAGE 4680 VALUES(FIELDNAME(source), MessageFlowLabel || '.' || NodeLabel);
END IF;
DECLARE source_body REFERENCE TO source_msg_root;
IF localStackPtr.field IN ('XMLNSC', 'XMLNS', 'JMSMap', 'JMSStream', 'DataObject', 'BLOB', 'XML') THEN
	MOVE source_body FIRSTCHILD  NAMESPACE '' NAME 'msg_CUSTOMERCOMPLAINT';
END IF;
IF FIELDNAME(source.MQRFH2C) IS NOT NULL THEN
	CREATE LASTCHILD OF localStackPtr DOMAIN 'MQRFH2C' NAME 'MQRFH2';
	SET localStackPtr.MQRFH2 = source.MQRFH2C;
ELSEIF FIELDNAME(source.MQRFH2) IS NOT NULL THEN
	CREATE LASTCHILD OF localStackPtr DOMAIN 'MQRFH2' NAME 'MQRFH2';
	SET localStackPtr.MQRFH2 = source.MQRFH2;
ELSE
	CREATE FIELD localStackPtr.MQRFH2;
END IF;
DECLARE source_MQRFH2_or_MQRFH2C REFERENCE TO localStackPtr.MQRFH2;
CREATE FIELD stackPtr.targetParserCategory;
CREATE FIELD stackPtr.targetParser;
DETACH target.Properties;
SET stackPtr.targetParserCategory = "#WBIMB_PARSER_CATEGORY_MRM";
MOVE target LASTCHILD NAME 'Properties';
IF LASTMOVE(target) THEN
	MOVE target PARENT;
ELSE
	CREATE LASTCHILD OF target DOMAIN 'Properties';
END IF;
SET target."Properties"."MessageSet" = 'L4MCN5C002001';
SET target."Properties"."MessageType" = '{}:Complaint_Out';
SET target."Properties"."MessageFormat" = 'XML1';
SET target."Properties"."Encoding" = source."Properties"."Encoding";
SET target."Properties"."CodedCharSetId" = source."Properties"."CodedCharSetId";
SET target."Properties"."Transactional" = source."Properties"."Transactional";
SET target."Properties"."Persistence" = source."Properties"."Persistence";
SET target."Properties"."CreationTime" = source."Properties"."CreationTime";
SET target."Properties"."ExpirationTime" = source."Properties"."ExpirationTime";
SET target."Properties"."Priority" = source."Properties"."Priority";
SET target."Properties"."ReplyIdentifier" = source."Properties"."ReplyIdentifier";
SET target."Properties"."ReplyProtocol" = source."Properties"."ReplyProtocol";
SET target."Properties"."Topic" = source."Properties"."Topic";
SET target."Properties"."ContentType" = source."Properties"."ContentType";
SET target."Properties"."IdentitySourceType" = source."Properties"."IdentitySourceType";
SET target."Properties"."IdentitySourceToken" = source."Properties"."IdentitySourceToken";
SET target."Properties"."IdentitySourcePassword" = source."Properties"."IdentitySourcePassword";
SET target."Properties"."IdentitySourceIssuedBy" = source."Properties"."IdentitySourceIssuedBy";
SET target."Properties"."IdentityMappedType" = source."Properties"."IdentityMappedType";
SET target."Properties"."IdentityMappedToken" = source."Properties"."IdentityMappedToken";
SET target."Properties"."IdentityMappedPassword" = source."Properties"."IdentityMappedPassword";
SET target."Properties"."IdentityMappedIssuedBy" = source."Properties"."IdentityMappedIssuedBy";
MOVE localStackPtrRef TO target."Properties";
IF LASTMOVE(localStackPtrRef) THEN
	MOVE localStackPtrRef FIRSTCHILD;
	IF (NOT LASTMOVE(localStackPtrRef)) AND (FIELDVALUE(localStackPtrRef) IS NULL) THEN
		DELETE FIELD localStackPtrRef;
	END IF;
END IF;
CALL sql.map.WBIMB_ESQL_SYS_LIB_CopyMessageHeaders(source, target);
SET stackPtr.targetParser = 'MRM';
SET stackPtr.targetParserCategory = "#WBIMB_PARSER_CATEGORY_MRM";
MOVE target LASTCHILD NAME 'MRM';
IF LASTMOVE(target) THEN
	MOVE target PARENT;
ELSE
	CREATE LASTCHILD OF target DOMAIN 'MRM';
END IF;
IF stackPtr.sourceParserCategory = "#WBIMB_PARSER_CATEGORY_XMLNSC" THEN
	SET target."MRM"."Version" = source_body.(XMLNSC.Element)"VERSION";
ELSE
	SET target."MRM"."Version" = source_body."VERSION";
END IF;
IF stackPtr.sourceParserCategory = "#WBIMB_PARSER_CATEGORY_XMLNSC" THEN
	SET target."MRM"."Customer"."Name"."First" = source_body."CUSTOMER_NAME".(XMLNSC.Element)"N_FIRST";
ELSE
	SET target."MRM"."Customer"."Name"."First" = source_body."CUSTOMER_NAME"."N_FIRST";
END IF;
IF stackPtr.sourceParserCategory = "#WBIMB_PARSER_CATEGORY_XMLNSC" THEN
	SET target."MRM"."Customer"."Name"."Last" = source_body."CUSTOMER_NAME".(XMLNSC.Element)"N_LAST";
ELSE
	SET target."MRM"."Customer"."Name"."Last" = source_body."CUSTOMER_NAME"."N_LAST";
END IF;
MOVE localStackPtrRef TO target."MRM"."Customer"."Name";
IF LASTMOVE(localStackPtrRef) THEN
	MOVE localStackPtrRef FIRSTCHILD;
	IF (NOT LASTMOVE(localStackPtrRef)) AND (FIELDVALUE(localStackPtrRef) IS NULL) THEN
		DELETE FIELD localStackPtrRef;
	END IF;
END IF;
CREATE LASTCHILD OF target."MRM"."Customer"."Address" NAME 'Line';
IF stackPtr.sourceParserCategory = "#WBIMB_PARSER_CATEGORY_XMLNSC" THEN
	IF FIELDTYPE(source_body."CUSTOMER_ADDRESS".(XMLNSC.Element)"A_LINE") IS NOT NULL THEN
	SET target."MRM"."Customer"."Address"."Line"[<] TYPE = FIELDTYPE(source_body."CUSTOMER_ADDRESS".(XMLNSC.Element)"A_LINE");
END IF;
SET target."MRM"."Customer"."Address"."Line"[<] = source_body."CUSTOMER_ADDRESS".(XMLNSC.Element)"A_LINE";
ELSE
	IF FIELDTYPE(source_body."CUSTOMER_ADDRESS"."A_LINE") IS NOT NULL THEN
	SET target."MRM"."Customer"."Address"."Line"[<] TYPE = FIELDTYPE(source_body."CUSTOMER_ADDRESS"."A_LINE");
END IF;
SET target."MRM"."Customer"."Address"."Line"[<] = source_body."CUSTOMER_ADDRESS"."A_LINE";
END IF;
IF stackPtr.sourceParserCategory = "#WBIMB_PARSER_CATEGORY_XMLNSC" THEN
	SET target."MRM"."Customer"."Address"."Town" = source_body."CUSTOMER_ADDRESS".(XMLNSC.Element)"TOWN";
ELSE
	SET target."MRM"."Customer"."Address"."Town" = source_body."CUSTOMER_ADDRESS"."TOWN";
END IF;
IF stackPtr.sourceParserCategory = "#WBIMB_PARSER_CATEGORY_XMLNSC" THEN
	SET target."MRM"."Customer"."Address"."Zip" = source_body."CUSTOMER_ADDRESS".(XMLNSC.Element)"ZIP";
ELSE
	SET target."MRM"."Customer"."Address"."Zip" = source_body."CUSTOMER_ADDRESS"."ZIP";
END IF;
IF stackPtr.sourceParserCategory = "#WBIMB_PARSER_CATEGORY_XMLNSC" THEN
	SET target."MRM"."Customer"."Address"."Country" = source_body."CUSTOMER_ADDRESS".(XMLNSC.Element)"COUNTRY";
ELSE
	SET target."MRM"."Customer"."Address"."Country" = source_body."CUSTOMER_ADDRESS"."COUNTRY";
END IF;
MOVE localStackPtrRef TO target."MRM"."Customer"."Address";
IF LASTMOVE(localStackPtrRef) THEN
	MOVE localStackPtrRef FIRSTCHILD;
	IF (NOT LASTMOVE(localStackPtrRef)) AND (FIELDVALUE(localStackPtrRef) IS NULL) THEN
		DELETE FIELD localStackPtrRef;
	END IF;
END IF;
MOVE localStackPtrRef TO target."MRM"."Customer";
IF LASTMOVE(localStackPtrRef) THEN
	MOVE localStackPtrRef FIRSTCHILD;
	IF (NOT LASTMOVE(localStackPtrRef)) AND (FIELDVALUE(localStackPtrRef) IS NULL) THEN
		DELETE FIELD localStackPtrRef;
	END IF;
END IF;
IF stackPtr.sourceParserCategory = "#WBIMB_PARSER_CATEGORY_XMLNSC" THEN
	SET target."MRM"."Complaint"."Type" = source_body."COMPLAINT".(XMLNSC.Element)"C_TYPE";
ELSE
	SET target."MRM"."Complaint"."Type" = source_body."COMPLAINT"."C_TYPE";
END IF;
IF stackPtr.sourceParserCategory = "#WBIMB_PARSER_CATEGORY_XMLNSC" THEN
	SET target."MRM"."Complaint"."Reference" = source_body."COMPLAINT".(XMLNSC.Element)"C_REF";
ELSE
	SET target."MRM"."Complaint"."Reference" = source_body."COMPLAINT"."C_REF";
END IF;
IF stackPtr.sourceParserCategory = "#WBIMB_PARSER_CATEGORY_XMLNSC" THEN
	SET target."MRM"."Complaint"."Text" = source_body."COMPLAINT".(XMLNSC.Element)"C_TEXT";
ELSE
	SET target."MRM"."Complaint"."Text" = source_body."COMPLAINT"."C_TEXT";
END IF;
MOVE localStackPtrRef TO target."MRM"."Complaint";
IF LASTMOVE(localStackPtrRef) THEN
	MOVE localStackPtrRef FIRSTCHILD;
	IF (NOT LASTMOVE(localStackPtrRef)) AND (FIELDVALUE(localStackPtrRef) IS NULL) THEN
		DELETE FIELD localStackPtrRef;
	END IF;
END IF;
IF stackPtr.sourceParserCategory = "#WBIMB_PARSER_CATEGORY_XMLNSC" THEN
	IF (source_body."COMPLAINT".(XMLNSC.Element)"C_TYPE") = ('Order') THEN
	SET localStackPtr.field = TRUE;
ELSE
	SET localStackPtr.field = FALSE;
END IF;
ELSE
	IF (source_body."COMPLAINT"."C_TYPE") = ('Order') THEN
	SET localStackPtr.field = TRUE;
ELSE
	SET localStackPtr.field = FALSE;
END IF;
END IF;
IF localStackPtr.field THEN
IF stackPtr.sourceParserCategory = "#WBIMB_PARSER_CATEGORY_XMLNSC" THEN
	SET target."MRM"."Admin"."Reference" = procs.generateComplaintID(source_body."COMPLAINT".(XMLNSC.Element)"C_TYPE");
ELSE
	SET target."MRM"."Admin"."Reference" = procs.generateComplaintID(source_body."COMPLAINT"."C_TYPE");
END IF;
SET target."MRM"."Admin"."Dept" = 'B01';
CREATE FIELD localStackPtr.SELECT.ResultSet.Rows;
DECLARE "selectResultRef#" REFERENCE TO localStackPtr.SELECT.ResultSet;
SET "selectResultRef#".Rows[] =
	SELECT "WBIMB_T0_".PHONENO AS "WBIMB_T0_PHONENO", "WBIMB_T0_".FIRSTNME AS "WBIMB_T0_FIRSTNME", "WBIMB_T0_".MIDINIT AS "WBIMB_T0_MIDINIT", "WBIMB_T0_".LASTNAME AS "WBIMB_T0_LASTNAME"
		FROM Database.EMPDB.UPENDER.EMPLOYEE AS "WBIMB_T0_"
			WHERE (("WBIMB_T0_".JOB) = ('MANAGER')) AND (("WBIMB_T0_".WORKDEPT) = ('B01'));
DECLARE "#sr0" REFERENCE TO "selectResultRef#".Rows;
IF LASTMOVE("#sr0") THEN
	CALL sql.map.WBIMB_ESQL_SYS_LIB_SetCurrentSourcePosition(sourceStackPtr, '"#sr0"', '"selectResultRef#".Rows');
	WHILE (LASTMOVE("#sr0")) DO
CREATE FIELD localStackPtr.is_atom;
CALL sql.map.xpath20.WBIMB_ESQL_SYS_LIB_is_atom("#sr0"."WBIMB_T0_FIRSTNME", "#sr0",localStackPtr);
CALL sql.map.xpath20.WBIMB_ESQL_SYS_LIB_is_atom("#sr0"."WBIMB_T0_MIDINIT", "#sr0",localStackPtr);
IF localStackPtr.is_atom.result[1] AND localStackPtr.is_atom.result[2] THEN
SET target."MRM"."Admin"."Manager"."FirstName" = sql.map.xpath20.WBIMB_ESQL_SYS_LIB_concat(CAST( "#sr0"."WBIMB_T0_FIRSTNME" AS CHARACTER), sql.map.xpath20.WBIMB_ESQL_SYS_LIB_concat(CAST( '' AS CHARACTER), sql.map.xpath20.WBIMB_ESQL_SYS_LIB_concat(CAST( "#sr0"."WBIMB_T0_MIDINIT" AS CHARACTER), CAST( '.' AS CHARACTER))));
ELSE
	THROW USER EXCEPTION MESSAGE 2949 VALUES('The message path references multiple values', 'Ensure the message path refers to a single value', 'Check the message path does not have repeating segments or its repeating segments are bounded by a for statement');
END IF;
DELETE FIELD localStackPtr.is_atom;
SET target."MRM"."Admin"."Manager"."LastName" = "#sr0"."WBIMB_T0_LASTNAME";
SET target."MRM"."Admin"."Manager"."Phone" = "#sr0"."WBIMB_T0_PHONENO";
MOVE localStackPtrRef TO target."MRM"."Admin"."Manager";
IF LASTMOVE(localStackPtrRef) THEN
	MOVE localStackPtrRef FIRSTCHILD;
	IF (NOT LASTMOVE(localStackPtrRef)) AND (FIELDVALUE(localStackPtrRef) IS NULL) THEN
		DELETE FIELD localStackPtrRef;
	END IF;
END IF;
SET target."MRM"."Admin"."Text" = 'Please Action';
		MOVE "#sr0" NEXTSIBLING REPEAT NAME;
		IF LASTMOVE("#sr0") THEN
			SET sourceStackPtr.occurrence[nestingLevel] = sourceStackPtr.occurrence[nestingLevel] + 1;
		END IF;
	END WHILE;
	CALL sql.map.WBIMB_ESQL_SYS_LIB_RestoreCurrentSourcePosition(sourceStackPtr);
END IF;
DELETE FIELD "selectResultRef#";
MOVE localStackPtrRef TO target."MRM"."Admin";
IF LASTMOVE(localStackPtrRef) THEN
	MOVE localStackPtrRef FIRSTCHILD;
	IF (NOT LASTMOVE(localStackPtrRef)) AND (FIELDVALUE(localStackPtrRef) IS NULL) THEN
		DELETE FIELD localStackPtrRef;
	END IF;
END IF;
ELSE
IF stackPtr.sourceParserCategory = "#WBIMB_PARSER_CATEGORY_XMLNSC" THEN
	IF (source_body."COMPLAINT".(XMLNSC.Element)"C_TYPE") = ('Delivery') THEN
	SET localStackPtr.field = TRUE;
ELSE
	SET localStackPtr.field = FALSE;
END IF;
ELSE
	IF (source_body."COMPLAINT"."C_TYPE") = ('Delivery') THEN
	SET localStackPtr.field = TRUE;
ELSE
	SET localStackPtr.field = FALSE;
END IF;
END IF;
IF localStackPtr.field THEN
IF stackPtr.sourceParserCategory = "#WBIMB_PARSER_CATEGORY_XMLNSC" THEN
	SET target."MRM"."Admin"."Reference" = procs.generateComplaintID(source_body."COMPLAINT".(XMLNSC.Element)"C_TYPE");
ELSE
	SET target."MRM"."Admin"."Reference" = procs.generateComplaintID(source_body."COMPLAINT"."C_TYPE");
END IF;
SET target."MRM"."Admin"."Dept" = 'CO1';
CREATE FIELD localStackPtr.SELECT.ResultSet_1.Rows;
DECLARE "selectResultRef_1#" REFERENCE TO localStackPtr.SELECT.ResultSet_1;
SET "selectResultRef_1#".Rows[] =
	SELECT "WBIMB_T1_".PHONENO AS "WBIMB_T1_PHONENO", "WBIMB_T1_".LASTNAME AS "WBIMB_T1_LASTNAME", "WBIMB_T1_".FIRSTNME AS "WBIMB_T1_FIRSTNME", "WBIMB_T1_".MIDINIT AS "WBIMB_T1_MIDINIT"
		FROM Database.EMPDB.UPENDER.EMPLOYEE AS "WBIMB_T1_"
			WHERE (("WBIMB_T1_".JOB) = ('MANAGER')) AND (("WBIMB_T1_".WORKDEPT) = ('C01'));
DECLARE "#sr1" REFERENCE TO "selectResultRef_1#".Rows;
IF LASTMOVE("#sr1") THEN
	CALL sql.map.WBIMB_ESQL_SYS_LIB_SetCurrentSourcePosition(sourceStackPtr, '"#sr1"', '"selectResultRef_1#".Rows');
	WHILE (LASTMOVE("#sr1")) DO
CREATE FIELD localStackPtr.is_atom;
CALL sql.map.xpath20.WBIMB_ESQL_SYS_LIB_is_atom("#sr1"."WBIMB_T1_FIRSTNME", "#sr1",localStackPtr);
CALL sql.map.xpath20.WBIMB_ESQL_SYS_LIB_is_atom("#sr1"."WBIMB_T1_MIDINIT", "#sr1",localStackPtr);
IF localStackPtr.is_atom.result[1] AND localStackPtr.is_atom.result[2] THEN
SET target."MRM"."Admin"."Manager"."FirstName" = sql.map.xpath20.WBIMB_ESQL_SYS_LIB_concat(CAST( "#sr1"."WBIMB_T1_FIRSTNME" AS CHARACTER), sql.map.xpath20.WBIMB_ESQL_SYS_LIB_concat(CAST( '' AS CHARACTER), sql.map.xpath20.WBIMB_ESQL_SYS_LIB_concat(CAST( "#sr1"."WBIMB_T1_MIDINIT" AS CHARACTER), CAST( '.' AS CHARACTER))));
ELSE
	THROW USER EXCEPTION MESSAGE 2949 VALUES('The message path references multiple values', 'Ensure the message path refers to a single value', 'Check the message path does not have repeating segments or its repeating segments are bounded by a for statement');
END IF;
DELETE FIELD localStackPtr.is_atom;
SET target."MRM"."Admin"."Manager"."LastName" = "#sr1"."WBIMB_T1_LASTNAME";
SET target."MRM"."Admin"."Manager"."Phone" = "#sr1"."WBIMB_T1_PHONENO";
MOVE localStackPtrRef TO target."MRM"."Admin"."Manager";
IF LASTMOVE(localStackPtrRef) THEN
	MOVE localStackPtrRef FIRSTCHILD;
	IF (NOT LASTMOVE(localStackPtrRef)) AND (FIELDVALUE(localStackPtrRef) IS NULL) THEN
		DELETE FIELD localStackPtrRef;
	END IF;
END IF;
SET target."MRM"."Admin"."Text" = 'Please Action';
		MOVE "#sr1" NEXTSIBLING REPEAT NAME;
		IF LASTMOVE("#sr1") THEN
			SET sourceStackPtr.occurrence[nestingLevel] = sourceStackPtr.occurrence[nestingLevel] + 1;
		END IF;
	END WHILE;
	CALL sql.map.WBIMB_ESQL_SYS_LIB_RestoreCurrentSourcePosition(sourceStackPtr);
END IF;
DELETE FIELD "selectResultRef_1#";
MOVE localStackPtrRef TO target."MRM"."Admin";
IF LASTMOVE(localStackPtrRef) THEN
	MOVE localStackPtrRef FIRSTCHILD;
	IF (NOT LASTMOVE(localStackPtrRef)) AND (FIELDVALUE(localStackPtrRef) IS NULL) THEN
		DELETE FIELD localStackPtrRef;
	END IF;
END IF;
ELSE
IF stackPtr.sourceParserCategory = "#WBIMB_PARSER_CATEGORY_XMLNSC" THEN
	SET target."MRM"."Admin"."Reference" = procs.generateComplaintID(source_body."COMPLAINT".(XMLNSC.Element)"C_TYPE");
ELSE
	SET target."MRM"."Admin"."Reference" = procs.generateComplaintID(source_body."COMPLAINT"."C_TYPE");
END IF;
SET target."MRM"."Admin"."Dept" = 'EO1';
CREATE FIELD localStackPtr.SELECT.ResultSet_2.Rows;
DECLARE "selectResultRef_2#" REFERENCE TO localStackPtr.SELECT.ResultSet_2;
SET "selectResultRef_2#".Rows[] =
	SELECT "WBIMB_T2_".LASTNAME AS "WBIMB_T2_LASTNAME", "WBIMB_T2_".FIRSTNME AS "WBIMB_T2_FIRSTNME", "WBIMB_T2_".MIDINIT AS "WBIMB_T2_MIDINIT", "WBIMB_T2_".PHONENO AS "WBIMB_T2_PHONENO"
		FROM Database.EMPDB.UPENDER.EMPLOYEE AS "WBIMB_T2_"
			WHERE (("WBIMB_T2_".JOB) = ('MANAGER')) AND (("WBIMB_T2_".WORKDEPT) = ('E01'));
DECLARE "#sr2" REFERENCE TO "selectResultRef_2#".Rows;
IF LASTMOVE("#sr2") THEN
	CALL sql.map.WBIMB_ESQL_SYS_LIB_SetCurrentSourcePosition(sourceStackPtr, '"#sr2"', '"selectResultRef_2#".Rows');
	WHILE (LASTMOVE("#sr2")) DO
CREATE FIELD localStackPtr.is_atom;
CALL sql.map.xpath20.WBIMB_ESQL_SYS_LIB_is_atom("#sr2"."WBIMB_T2_FIRSTNME", "#sr2",localStackPtr);
CALL sql.map.xpath20.WBIMB_ESQL_SYS_LIB_is_atom("#sr2"."WBIMB_T2_MIDINIT", "#sr2",localStackPtr);
IF localStackPtr.is_atom.result[1] AND localStackPtr.is_atom.result[2] THEN
SET target."MRM"."Admin"."Manager"."FirstName" = sql.map.xpath20.WBIMB_ESQL_SYS_LIB_concat(CAST( "#sr2"."WBIMB_T2_FIRSTNME" AS CHARACTER), sql.map.xpath20.WBIMB_ESQL_SYS_LIB_concat(CAST( '' AS CHARACTER), sql.map.xpath20.WBIMB_ESQL_SYS_LIB_concat(CAST( "#sr2"."WBIMB_T2_MIDINIT" AS CHARACTER), CAST( '.' AS CHARACTER))));
ELSE
	THROW USER EXCEPTION MESSAGE 2949 VALUES('The message path references multiple values', 'Ensure the message path refers to a single value', 'Check the message path does not have repeating segments or its repeating segments are bounded by a for statement');
END IF;
DELETE FIELD localStackPtr.is_atom;
SET target."MRM"."Admin"."Manager"."LastName" = "#sr2"."WBIMB_T2_LASTNAME";
SET target."MRM"."Admin"."Manager"."Phone" = "#sr2"."WBIMB_T2_PHONENO";
MOVE localStackPtrRef TO target."MRM"."Admin"."Manager";
IF LASTMOVE(localStackPtrRef) THEN
	MOVE localStackPtrRef FIRSTCHILD;
	IF (NOT LASTMOVE(localStackPtrRef)) AND (FIELDVALUE(localStackPtrRef) IS NULL) THEN
		DELETE FIELD localStackPtrRef;
	END IF;
END IF;
SET target."MRM"."Admin"."Text" = 'Please Action';
		MOVE "#sr2" NEXTSIBLING REPEAT NAME;
		IF LASTMOVE("#sr2") THEN
			SET sourceStackPtr.occurrence[nestingLevel] = sourceStackPtr.occurrence[nestingLevel] + 1;
		END IF;
	END WHILE;
	CALL sql.map.WBIMB_ESQL_SYS_LIB_RestoreCurrentSourcePosition(sourceStackPtr);
END IF;
DELETE FIELD "selectResultRef_2#";
MOVE localStackPtrRef TO target."MRM"."Admin";
IF LASTMOVE(localStackPtrRef) THEN
	MOVE localStackPtrRef FIRSTCHILD;
	IF (NOT LASTMOVE(localStackPtrRef)) AND (FIELDVALUE(localStackPtrRef) IS NULL) THEN
		DELETE FIELD localStackPtrRef;
	END IF;
END IF;
END IF;
END IF;
CALL sql.map.WBIMB_ESQL_SYS_LIB_PushGlobalStackFrame(stackPtr);
PROPAGATE;
CALL sql.map.WBIMB_ESQL_SYS_LIB_PopGlobalStackFrame(stackPtr);
MOVE globalStackRef TO stackPtr.GLOBAL_STACK;
IF (LASTMOVE(globalStackRef) AND globalStackRef.frameDepth = 0)THEN
	DELETE FIELD stackPtr.GLOBAL_STACK;
	DELETE FIELD stackPtr.LOCAL_STACK;
	DELETE FIELD stackPtr.sourceParserCategory;
	DELETE FIELD stackPtr.targetParserCategory;
	DELETE FIELD stackPtr.targetParser;
END IF;
END;
