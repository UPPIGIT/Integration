

CREATE COMPUTE MODULE DdecideOnQuery
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		SET OutputRoot = InputRoot;
		
		IF InputRoot.XMLNSC.PassengerQuery.ReservationNumber <> '' THEN
			
			
			SET OutputLocalEnvironment.Destination.RouterList.DestinationData[1].labelname ='SinglePassenger';
			
		ELSE
			
			SET OutputLocalEnvironment.Destination.RouterList.DestinationData[1].labelname ='AllReservations';
			
		END IF;
		
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


CREATE COMPUTE MODULE GetPassengerInformaion
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		SET OutputRoot = InputRoot;
		
		SET OutputRoot.XMLNSC.PassengerQuery = NULL;
		
		SET Environment.Variables  = THE(SELECT T.* FROM Database.UPENDER.XMLPASSENGERTB AS T 
		WHERE T.RESERVATIONNO = InputRoot.XMLNSC.ReservationNumber );
		
		CREATE FIELD OutputRoot.XMLNSC.PassengerInfoResponse.PassengerQuery.PassengerInfo;
		
		DECLARE outpass REFERENCE TO OutputRoot.XMLNSC.PassengerInfoResponse.PassengerInfo;
		
		SET outpass.ReservationNumber =Environment.Variables.RESERVATIONNO;
		SET outpass.FirstName = Environment.Variables.FIRSTNAME;
		SET outpass.LastName = Environment.Variables.LASTNAME;
		SET outpass.FlightNumber = Environment.Variables.FLIGHTNO;
		SET outpass.FlightDate = Environment.Variables.FLIGHTDATE;
		SET outpass.Class = Environment.Variables.CLASSTYPE;
		
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


CREATE COMPUTE MODULE GetReservationsInformation
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		SET OutputRoot = InputRoot;
		
		SET OutputRoot.XMLNSC.PassengerQuery = NULL;
		
		SET Environment.Variables.Reservation[] = (SELECT T.* FROM Database.UPENDER.XMLPASSENGERTB  AS T
	    WHERE T.FIRSTNAME = InputRoot.XMLNSC.PassengerQuery.FirstName AND 
	    T.LASTNAME = InputRoot.XMLNSC.PassengerQuery.LastName) ;
	    
	    CREATE FIELD OutputRoot.XMLNSC.PassengerInfoResponse.ListOfReservations;
	    
	    DECLARE outres REFERENCE TO OutputRoot.XMLNSC.PassengerInfoResponse.ListOfReservations;
	    
	    DECLARE i INTEGER 1;
	    DECLARE j INTEGER CARDINALITY(Environment.Variables.*[]);
	    
	    WHILE i<=j DO
	    	
	    	SET outres.Reservation[i].FlightNumber = Environment.Variables[i].FLIGHTNO;
	    	SET outres.Reservation[i].FlightDate = Environment.Variables[i].FLIGHTDATE;
	    	SET outres.Reservation[i].Class = Environment.Variables[i].CLASSTYPE;
	    	
	    	SET i = i + 1 ;
	    	
	    	
	    	
	    	
	    	
	    	
	    	
	    END WHILE;
	    
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
