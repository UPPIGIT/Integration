

CREATE COMPUTE MODULE UPDATE_MASTER_DB_MF_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		DECLARE i INTEGER 1;
		DECLARE j INTEGER CARDINALITY(InputRoot.XMLNSC.emp[]); 
		DECLARE ben FLOAT;
		
		WHILE i<= 1 DO
			
			SET Environment.Variables.personal_details[i] = THE(SELECT  T.* FROM Database.DB2SCHEMA.PERSONAL_DETAILS  AS T
		 WHERE T.EMPNAME=InputRoot.XMLNSC.emp[i].emp_name AND T.EMPNO = InputRoot.XMLNSC.emp[i].emp_no ); 
		
			SET Environment.Variables.emp_details[i] = THE(SELECT  T.* FROM Database.DB2SCHEMA.EMPLOYMENT_DETAILS  AS T
		 WHERE T.EMPNAME=InputRoot.XMLNSC.emp[i].emp_name AND T.EMPNO = InputRoot.XMLNSC.emp[i].emp_no ); 
		
		IF Environment.Variables.emp_details[i].CATEGORY = 'A'THEN
			
				
			SET  ben =2000; 
			
		ELSEIF Environment.Variables.emp_details[i].CATEGORY = 'B'THEN
			
			 SET ben = 4000;
			 
		ELSEIF Environment.Variables.emp_details[i].CATEGORY = 'E' THEN
			
			SET ben = 6000;
		ELSE
			
			SET ben = 8000;
		END IF;
		
			SET i = i+1;
			
		UPDATE Database.DB2SCHEMA.PAYROLL_DETAILS AS T SET T.OTHER_BENEFITS =Environment.Variables.ben; 
		WHERE T.EMPNAME=InputRoot.XMLNSC.emp[i].emp_name AND T.EMPNO = InputRoot.XMLNSC.emp[i].emp_no ;
		
		SET Environment.Variables.Payroll_Details[i] = THE(SELECT T.* FROM Database.DB2SCHEMA.PAYROLL_DETAILS  AS T 
		 WHERE T.EMPNAME=InputRoot.XMLNSC.emp[i].emp_name AND T.EMPNO = InputRoot.XMLNSC.emp[i].emp_no ); 		 
			
		END WHILE;
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
