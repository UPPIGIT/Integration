
CREATE COMPUTE MODULE Compute_ComplaintID_and_Department
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		
		SET OutputRoot = InputRoot;

		SET OutputRoot.XMLNSC.CUSTOMERCOMPLAINT.ADMIN.REFERENCE =
		          'COM' || UUIDASCHAR;
		
		SET OutputRoot.XMLNSC.CUSTOMERCOMPLAINT.ADMIN.DEPT = CASE
			InputBody.CUSTOMERCOMPLAINT.COMPLAINT.C_TYPE
		WHEN 'Order' THEN 'B01'
		WHEN 'Delivery' THEN 'C01'
		ELSE 'E01'
		END;
		
		RETURN TRUE;
	END;

END MODULE;

CREATE COMPUTE MODULE LAB6_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	
		BEGIN
			
			CALL CopyMessageHeaders();
			SET OutputRoot.Properties.MessageSet ='LAB6_MSG_SET';
			SET OutputRoot.Properties.MessageType ='Complait_Reply';
			
			SET OutputRoot.MRM.YourComplaint.Type = InputRoot.XMLNSC.CUSTOMERCOMPLAINT.COMPLAINT.C_TYPE;
			SET OutputRoot.MRM.YourComplaint.Reference = InputRoot.XMLNSC.CUSTOMERCOMPLAINT.COMPLAINT.C_REF;
			SET OutputRoot.MRM.YourComplaint.Text = InputRoot.XMLNSC.CUSTOMERCOMPLAINT.COMPLAINT.C_TEXT;
			
			SET OutputRoot.MRM.Reply.OurReference = InputRoot.XMLNSC.CUSTOMERCOMPLAINT.ADMIN.DEPT || '-'|| InputRoot.XMLNSC.CUSTOMERCOMPLAINT.ADMIN.REFERENCE;
			SET OutputRoot.MRM.Reply.Text ='your complaint has been recived';
			
			
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


CREATE COMPUTE MODULE LAB6_Compute1
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
	CALL CopyMessageHeaders();
	SET OutputRoot = InputRoot;
	
	SET OutputRoot.MQMD.ReplyToQ = 'LAB6_REPLY';
	
	SET OutputRoot.Properties.MessageFormat = 'XML1';
	
        PROPAGATE  DELETE NONE;
	SET OutputRoot.Properties.MessageFormat ='Binary1';
	
	PROPAGATE DELETE NONE;
	
	SET OutputRoot.Properties.MessageFormat ='Text1';
	
PROPAGATE DELETE NONE;
	
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
